{{- $root := .Values -}}
{{- $rootDeployments := $root.deployments -}}
{{- $rootProducer := $rootDeployments.producer -}}
{{- $rootRabbitMQ := $root.rabbitmq -}}
apiVersion: {{ $rootDeployments.version }} # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ $rootProducer.name }}
  labels:
    app: {{ $rootProducer.name }}
spec:
  selector:
    matchLabels:
      app: {{ $rootProducer.name }}
  replicas: {{ $rootProducer.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ $rootProducer.name }}
    spec:
      containers:
      - name: {{ $rootProducer.name }}
        image: {{ $rootProducer.image }}
        resources:
          requests:
            cpu: {{ $rootProducer.cpu }}
            memory: {{ $rootProducer.memory }}
        command: ["python"]
        args: ["/app/producer.py", "-p", "{{$rootRabbitMQ.port}}", "-s", "{{$rootRabbitMQ.server}}", "-m", "{{$rootRabbitMQ.message}}", "-r", "{{$rootRabbitMQ.repeat}}"]
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env